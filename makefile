# Creates an executable with the lisp package management system (ASDF)
build: test
	sbcl --no-userinit --no-sysinit --non-interactive \
			 --load ~/quicklisp/setup.lisp \
			 --eval "(ql:quickload :my-portfolio)" \
			 --eval "(asdf:make :my-portfolio)"

# Runs unit tests against the current version of our project
test:
	sbcl --no-userinit --no-sysinit --non-interactive \
			 --load ~/quicklisp/setup.lisp \
			 --eval "(ql:quickload :my-portfolio/tests)" \
			 --eval "(asdf:test-system :my-portfolio)"

# Runs the test against the current local version of the base project docker image
docker-test:
	docker-compose -f docker-compose.util.yml up docker-test

# Runs the test in against a freshly built version of the project docker image
docker-test-clean-build: _portfolio-base docker-test

# Produces a production ready docker image containing a webserver executable and static files
docker-build-prod: docker-test-clean-build
	docker-compose -f docker-compose.util.yml up make-prod-executable \
	&& 	docker-compose -f docker-compose.util.yml build build-prod

# Runs our current local version of our production ready webapp
run-prod:
	docker-compose up my-portfolio

# Runs a fresh prod build on our local machine
run-prod-clean-build: docker-build-prod run-prod

# Pushes a freshly built and tested webappliction image
dockerhub-publish: docker-test-clean-build
	docker push emactaggart/my-portfolio:latest

# Does a full deploy to our hosting server # Does this even blong in a make file?
full-deploy: dockerhub-publish
	scp ~/prod.taggrc tagg:~/prod.taggrc \
	&& scp ./nginx.conf tagg:~/nginx.conf \
	&& scp docker-compose.yml tagg:~/docker-compose.yml \
	&& docker-compose pull \
	&& docker-compose up -d

# Does an nginx deploy on our hosting server
nginx-deploy:
	scp ./nginx.conf tagg:~/nginx.conf \
	&& docker-compose pull nginx \
	&& docker-compose up -d nginx

# Does an webapp deploy on our webserver
my-portfolio-deploy: docker-test-clean-build
	scp ~/prod.taggrc tagg:~/prod.taggrc \
	&& scp docker-compose.yml tagg:~/docker-compose.yml \
	&& docker-compose pull my-portfolio \
	&& docker-compose up -d my-portfolio

# TODO
# run stack locally
# run tests against stack
# have some for prod
# have some for  staging environment
integration-test:
	echo "not yet implemented"

# TODO what should we even clean?
# - all the lisp .fasl files,
# - perhaps the files generated by org-mode?
# - docker images and containers?
# - npm garbage? (not yet)
# TODO dont forget to add this to the clean runs
clean:
	echo "Not yet implemented"

# Some helpers for building docker images

_portfolio-base: _lisp-base
	docker-compose -f docker-compose.util.yml build my-portfolio-base

_lisp-base: _sbcl
	docker-compose -f docker-compose.util.yml build lisp-base

_sbcl:
	docker pull daewok/sbcl:alpine
