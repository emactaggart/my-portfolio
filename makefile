build: test
	sbcl --no-userinit --no-sysinit --non-interactive \
			 --load ~/quicklisp/setup.lisp \
			 --eval "(ql:quickload :my-portfolio)" \
			 --eval "(asdf:make :my-portfolio)"

test:
	sbcl --no-userinit --no-sysinit --non-interactive \
			 --load ~/quicklisp/setup.lisp \
			 --eval "(ql:quickload :my-portfolio/tests)" \
			 --eval "(asdf:test-system :my-portfolio)"

# TODO create entry for docker-compose
lisp-base:
	docker build --file Dockerfile.lisp-base --tag emactaggart/lisp-base:alpine .

portfolio-base: lisp-base
	docker build --file Dockerfile.my-portfolio-base --tag emactaggart/my-portfolio-base:alpine .

# FIXME force rebuilding?
docker-test: 
	docker run --rm emactaggart/my-portfolio-base:alpine make test

## TODO grab lisp dependencies only once unle
## FIXME begin here
# docker run --rm -v ~/Downloads/my-portfolio/builds:/root/my-portfolio/builds -it emactaggart/my-portfolio-base:alpine sh
build-prod-exe: docker-test
	docker run --rm -v ~/Downloads/my-portfolio/builds:/root/my-portfolio/builds/ emactaggart/my-portfolio-base:alpine make build



bundle-prod: build-prod-exe
	docker build --file Dockerfile.prod --tag emactaggart/my-portfolio:latest .

run-prod: 
	docker run -it -p 8080:8080 -v ~/prod.taggrc:/root/.taggrc:ro -v /var/log/my-portfolio:/var/log/my-portfolio emactaggart/my-portfolio:latest

# TODO what should we even clean? all the lisp .fasl files, perhaps the files generated by org-mode? docker images and containers?
clean:
	echo "Not yet implemented"

