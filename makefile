# Creates an executable with the lisp package management system (ASDF)
build: test
	sbcl --no-userinit --no-sysinit --non-interactive \
			 --load ~/quicklisp/setup.lisp \
			 --eval "(ql:quickload :my-portfolio)" \
			 --eval "(asdf:make :my-portfolio)"

# Runs unit tests against the current version of our project
test:
	sbcl --no-userinit --no-sysinit --non-interactive \
			 --load ~/quicklisp/setup.lisp \
			 --eval "(ql:quickload :my-portfolio/tests)" \
			 --eval "(asdf:test-system :my-portfolio)"

# Runs the test against the current local version of the base project docker image
docker-test:
	docker-compose -f docker-compose.util.yml up docker-test

# Runs the test in against a freshly built version of the project docker image
docker-test-clean-build: _portfolio-base docker-test

# Produces a production ready docker image containing a webserver executable and static files
docker-build: docker-build-my-portfolio

docker-build-my-portfolio: docker-test-clean-build
	docker-compose -f docker-compose.util.yml up make-prod-executable \
	&& 	docker-compose -f docker-compose.util.yml build build-prod

# FIXME shouldn't have to build prod exe... take a look in docker-compose.util.yml
run-dev:
	docker-compose -f docker-compose.yml -f docker-compose.dev.yml up --force-recreate my-portfolio

run-dev-full:
	docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d --force-recreate

# Runs our current local version of our production ready webapp
run-prod:
	docker-compose up -d --force-recreate my-portfolio

# Runs a fresh prod build on our local machine
run-prod-clean-build: docker-build-prod run-prod

# Pushes a freshly built and tested webappliction image
dockerhub-publish: docker-test-clean-build
	docker push emactaggart/my-portfolio:latest

# Does a full deploy to our hosting server # Does this even blong in a make file?
full-deploy: dockerhub-publish _my-portfolio-configs _nginx-configs
	ssh tagg "docker-compose pull" \
	&& ssh tagg "docker-compose up -d --force-recreate"

# Does an nginx deploy on our hosting server
nginx-deploy: _nginx-configs
	ssh tagg "docker-compose pull nginx" \
	&& ssh tagg "docker-compose up -d --force-recreate nginx"

# Does an webapp deploy on our webserver
my-portfolio-deploy: dockerhub-publish _my-portfolio-configs
	ssh tagg "docker-compose pull my-portfolio" \
	&& ssh tagg "docker-compose up -d --force-recreate my-portfolio"

# TODO
# run stack locally
# run tests against stack
# have some for prod
# have some for  staging environment
integration-test:
	echo "not yet implemented"

# TODO what should we even clean?
# - all the lisp .fasl files,
# - perhaps the files generated by org-mode?
# - docker images and containers?
# - npm garbage? (not yet)
# TODO dont forget to add this to the clean runs
clean:
	echo "Not yet implemented"

## Helpers for preparing the prod server configs

_nginx-configs:
	ssh tagg 'mv ~/nginx.conf{,.bak}' \
	&& scp {./,tagg:~/}nginx.conf

_my-portfolio-configs:
	ssh tagg 'mv ~/prod.taggrc{,.bak}' \
	&& ssh tagg 'mv ~/docker-compose.yml{,.bak}' \
	&& scp {~/,tagg:~/}prod.taggrc \
	&& scp {./,tagg:~/}docker-compose.yml

# Helpers for building docker images

_portfolio-base: _lisp-base
	docker-compose -f docker-compose.util.yml build my-portfolio-base

_lisp-base: _sbcl
	docker-compose -f docker-compose.util.yml build lisp-base

_sbcl:
	docker pull daewok/sbcl:alpine
